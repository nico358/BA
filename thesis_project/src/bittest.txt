// //Test bitpattern in byte and print
// 	void Test_Bits_In_Byte(uint8_t* byte)
// 	{
// 		if(*byte & 0x80){
// 			send_bit(1);
// 			}else{
// 			send_bit(0);
// 		}
// 		if(*byte & 0x40){
// 			send_bit(1);
// 			}else{
// 			send_bit(0);
// 		}
// 		if(*byte & 0x20){
// 			send_bit(1);
// 			}else{
// 			send_bit(0);
// 		}
// 		if(*byte & 0x10){
// 			send_bit(1);
// 			}else{
// 			send_bit(0);
// 		}
// 		if(*byte & 0x08){
// 			send_bit(1);
// 			}else{
// 			send_bit(0);
// 		}
// 		if(*byte & 0x04){
// 			send_bit(1);
// 			}else{
// 			send_bit(0);
// 		}
// 		if(*byte & 0x02){
// 			send_bit(1);
// 			}else{
// 			send_bit(0);
// 		}
// 		if(*byte & 0x01){
// 			send_bit(1);
// 			}else{
// 			send_bit(0);
// 		}
// 	}

// //Test bitpattern in two bytes
// 	void Test_Bits_In_DoubleByte(uint16_t* doublebyte)
// 	{
// 		uint8_t lsb, msb;
// 		uint16_t tmp = *doublebyte;
// 		lsb = tmp;
// 		msb = (tmp >> 8);
// 		Test_Bits_In_Byte(&msb);
// 		Test_Bits_In_Byte(&lsb);
// 	}
	
// //Test bitpattern in four bytes
// 	void Test_Bits_In_Integer(uint32_t* quadbyte)
// 	{
// 		uint16_t lshex, mshex;
// 		uint32_t tmp = *quadbyte;
// 		lshex = tmp;
// 		mshex = (tmp >> 16);
// 		Test_Bits_In_DoubleByte(&mshex);
// 		Test_Bits_In_DoubleByte(&lshex);
// 	}
