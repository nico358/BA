/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKCURRENT_MEASUREMENT_H
#define _MOCKCURRENT_MEASUREMENT_H

#include "unity.h"
#include "current_measurement.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockcurrent_measurement_Init(void);
void Mockcurrent_measurement_Destroy(void);
void Mockcurrent_measurement_Verify(void);




#define pushCurrentMeasurement_ExpectAndReturn(buf, measurement, cmock_retval) pushCurrentMeasurement_CMockExpectAndReturn(__LINE__, buf, measurement, cmock_retval)
void pushCurrentMeasurement_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, circularBuffer* buf, currentMeasurement* measurement, uint8_t cmock_to_return);
#define popCurrentMeasurement_ExpectAndReturn(buf, measurement, cmock_retval) popCurrentMeasurement_CMockExpectAndReturn(__LINE__, buf, measurement, cmock_retval)
void popCurrentMeasurement_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, circularBuffer* buf, currentMeasurementFloat* measurement, uint8_t cmock_to_return);
#define currentMeasurementConvert_Expect(measurement, converted) currentMeasurementConvert_CMockExpect(__LINE__, measurement, converted)
void currentMeasurementConvert_CMockExpect(UNITY_LINE_TYPE cmock_line, currentMeasurement* measurement, currentMeasurementFloat* converted);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
